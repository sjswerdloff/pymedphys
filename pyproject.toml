[tool.poetry]
name = "pymedphys"
version = "0.36.0"
readme = "lib/pymedphys/docs/README.rst"
description = "Medical Physics library"
authors = [
    "PyMedPhys Contributors <developers@pymedphys.com>",
    "Simon Biggs <sbiggs@pymedphys.com>",
    "Matthew Jennings <mjennings@pymedphys.com>",
    "Stuart Swerdloff",
    "Phillip Chlap",
    "Jake Rembish",
    "Matthew Cooper <mcooper@pymedphys.com>",
    "Jacob McAloney",
    "Pedro Martinez",
]
license = "Apache-2.0"
homepage = "https://pymedphys.com"
repository = "https://github.com/pymedphys/pymedphys"
documentation = "https://docs.pymedphys.com"
classifiers = [
    "Development Status :: 4 - Beta",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Physics",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Healthcare Industry",
]

packages = [{ include = "pymedphys", from = "lib" }]

[tool.poetry.dependencies]
python = "^3.6.2"
dataclasses = { version = "*", python = "~3.6" }
typing-extensions = "*"


# ------- #
# Library #
# ------- #
tqdm = { version = "*", optional = true }  # groups = ["user", "dev"]
attrs = { version = "*", optional = true }  # groups = ["user", "dev"]
watchdog = { version = "*", optional = true }  # groups = ["user", "dev"]

keyring = { version = "*", optional = true }  # groups = ["user", "dev"]
packaging = { version = "*", optional = true }  # groups = ["user", "dev"]
PyYAML = { version = "*", optional = true }  # groups = ["user", "dev"]
requests = { version = "*", optional = true }  # groups = ["user", "dev"]

matplotlib = { version = "*", optional = true }  # groups = ["user", "dev"]
scipy = { version = "*", optional = true }  # groups = ["user", "dev"]
Pillow = { version = "*", optional = true }  # groups = ["user", "dev"]
imageio = { version = "*", optional = true }  # groups = ["user", "dev"]
scikit-image = { version = "*", optional = true }  # groups = ["user", "dev"]
data-science-types = { version = "*", optional = true }  # groups = ["user", "dev"]
xarray = { version = "*", optional = true }  # groups = ["user", "dev"]

pymssql = { version = "*", optional = true }  # groups = ["user", "dev", "mosaiq"]
sqlalchemy = { version = "*", optional = true }  # groups = ["user", "dev", "mosaiq"]
natsort = { version = "*", optional = true }  # groups = ["user", "dev"]
tomlkit = { version = "*", optional = true }  # groups = ["user", "dev", "propagate"]

pynetdicom = { version = "*", optional = true }  # groups = ["user", "dev", "dicom"]
pylibjpeg-libjpeg = { version = "*", optional = true }  # groups = ["user", "dev", "dicom"]

dbfread = { version = "*", optional = true }  # groups = ["user", "dev"]
xmltodict = { version = "*", optional = true }  # groups = ["user", "dev"]
timeago = { version = "*", optional = true }  # groups = ["user", "dev"]
xlsxwriter = { version = "*", optional = true }  # groups = ["user", "dev"]
plotly = { version = "*", optional = true }  # groups = ["user", "dev"]
dicompyler-core = { version = "*", optional = true }  # groups = ["user", "dev"]

# The following lower bounded packages are due to certain APIs utilised
numpy = { version = ">=1.12", optional = true }  # groups = ["user", "dev"]
pandas = { version = ">=1.0.0", optional = true }  # groups = ["user", "dev", "mosaiq"]
pydicom = { version = ">=2.0.0", optional = true }  # groups = ["user", "dev", "dicom"]

# Shapely's lower bound is so that the PyPI version with wheels is used
shapely = { version = ">=1.7.0", optional = true }  # groups = ["user", "dev"]

# Streamlit's pinning is due to its current beta nature and the fact that some
# private APIs are utilised.
streamlit = { version = "0.78.0", optional = true }  # groups = ["user", "dev"]
streamlit-ace = { version = "0.0.4", optional = true }  # groups = ["user", "dev"]
streamlit-analytics = { version = "0.1.2", optional = true }  # groups = ["user", "dev"]

# PyLinac is pinned due to historical algorithm changes with both minor and
# patch version bumps.
pylinac = { version = "2.3.2", optional = true }  # groups = ["user", "dev", "doctests"]

# Scikit-learn has an upper bound since there appears to be an incompatibility
# between pylinac and scikit-learn version 0.24.0
scikit-learn = { version = "*", optional = true }  # groups = ["user", "dev", "mosaiq"]

fsspec = { version = "*", optional = true }  # groups = ["user", "dev"]

# ----------- #
# Comparables #
# ----------- #
flashgamma = { version = "*", optional = true }  # groups = ["comparables"]

# ---------------- #
# Machine Learning #
# ---------------- #
tensorflow = { version = ">=2.2.0", optional = true }  # groups = ["ml", "doctests"]

# ------------- #
# Documentation #
# ------------- #
sphinx-argparse = { version = "*", optional = true }  # groups = ["dev", "docs"]
sphinxcontrib-napoleon = { version = "*", optional = true }  # groups = ["dev", "docs"]
sphinx-book-theme = { version = "*", optional = true }  # groups = ["dev", "docs", "doctests"]

networkx = { version = "*", optional = true }  # groups = ["dev", "docs"]

# Jupyter book has a lower bound due to 0.8 being a major breaking change
# version
jupyter-book = { version = ">=0.8.3", optional = true }  # groups = ["dev", "docs"]

# ----- #
# Tests #
# ----- #
pytest = { version = "*", optional = true }  # groups = ["dev", "tests"]
pytest-sugar = { version = "*", optional = true }  # groups = ["dev", "tests"]
hypothesis = { version = "<6", optional = true }  # groups = ["dev", "tests"]
psutil = { version = "*", optional = true }  # groups = ["dev", "tests"]
pylint = { version = "*", optional = true }  # groups = ["dev", "tests"]
pytest-rerunfailures = { version = "*", optional = true }  # groups = ["dev", "tests"]
python_dateutil = { version = "*", optional = true }  # groups = ["dev", "tests"]

# ---------------- #
# Development Only #
# ---------------- #
pre-commit = { version = "*", optional = true }  # groups = ["dev"]
black = { version = "^20.8b1", optional = true }  # groups = ["dev", "propagate", "doctests"]
mypy = { version = "*", optional = true }  # groups = ["dev"]
rope = { version = "*", optional = true }  # groups = ["dev"]
doc8 = { version = "*", optional = true }  # groups = ["dev"]
readme-renderer = { version = "*", optional = true }  # groups = ["dev"]
tabulate = { version = "*", optional = true }  # groups = ["dev", "doctests"]


[tool.poetry.extras]
comparables = ["flashgamma"]
dev = [
    "Pillow",
    "PyYAML",
    "attrs",
    "black",
    "data-science-types",
    "dbfread",
    "dicompyler-core",
    "doc8",
    "fsspec",
    "hypothesis",
    "imageio",
    "jupyter-book",
    "keyring",
    "matplotlib",
    "mypy",
    "natsort",
    "networkx",
    "numpy",
    "packaging",
    "pandas",
    "plotly",
    "pre-commit",
    "psutil",
    "pydicom",
    "pylibjpeg-libjpeg",
    "pylinac",
    "pylint",
    "pymssql",
    "pynetdicom",
    "pytest",
    "pytest-rerunfailures",
    "pytest-sugar",
    "python_dateutil",
    "readme-renderer",
    "requests",
    "rope",
    "scikit-image",
    "scikit-learn",
    "scipy",
    "shapely",
    "sphinx-argparse",
    "sphinx-book-theme",
    "sphinxcontrib-napoleon",
    "sqlalchemy",
    "streamlit",
    "streamlit-ace",
    "streamlit-analytics",
    "tabulate",
    "timeago",
    "tomlkit",
    "tqdm",
    "watchdog",
    "xarray",
    "xlsxwriter",
    "xmltodict",
]
dicom = ["pydicom", "pylibjpeg-libjpeg", "pynetdicom"]
docs = [
    "jupyter-book",
    "networkx",
    "sphinx-argparse",
    "sphinx-book-theme",
    "sphinxcontrib-napoleon",
]
doctests = ["black", "pylinac", "sphinx-book-theme", "tabulate", "tensorflow"]
ml = ["tensorflow"]
mosaiq = ["pandas", "pymssql", "scikit-learn", "sqlalchemy"]
propagate = ["black", "tomlkit"]
tests = [
    "hypothesis",
    "psutil",
    "pylint",
    "pytest",
    "pytest-rerunfailures",
    "pytest-sugar",
    "python_dateutil",
]
user = [
    "Pillow",
    "PyYAML",
    "attrs",
    "data-science-types",
    "dbfread",
    "dicompyler-core",
    "fsspec",
    "imageio",
    "keyring",
    "matplotlib",
    "natsort",
    "numpy",
    "packaging",
    "pandas",
    "plotly",
    "pydicom",
    "pylibjpeg-libjpeg",
    "pylinac",
    "pymssql",
    "pynetdicom",
    "requests",
    "scikit-image",
    "scikit-learn",
    "scipy",
    "shapely",
    "sqlalchemy",
    "streamlit",
    "streamlit-ace",
    "streamlit-analytics",
    "timeago",
    "tomlkit",
    "tqdm",
    "watchdog",
    "xarray",
    "xlsxwriter",
    "xmltodict",
]

[tool.poetry.scripts]
pymedphys = "pymedphys.__main__:main"

[tool.poetry.plugins."sphinx.html_themes"]
sphinx_pymedphys_theme = "pymedphys.docs.theme"

[tool.isort]
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

known_third_party = ["pymedphys._imports"]
known_general_scientific = [
    "numpy", "scipy", "pandas", "imageio", "PIL", "skimage", "matplotlib",
    "mpl_toolkits", "shapely", "altair", "sklearn", "plotly"
]
known_machine_learning = [
    "tensorflow", "pytorch"
]
known_streamlit = [
    "streamlit", "streamlit_ace", "streamlit_analytics"
]
known_medphys = [
    "pydicom", "pylinac", "pynetdicom", "libjpeg", "dicompylercore"
]
known_first_party = ["pymedphys"]
known_experimental = ["pymedphys._experimental"]
sections = [
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "GENERAL_SCIENTIFIC",
    "MACHINE_LEARNING",
    "STREAMLIT",
    "MEDPHYS",
    "FIRSTPARTY",
    "EXPERIMENTAL",
    "LOCALFOLDER",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
